*> Simple program to practice tables and file handling
IDENTIFICATION DIVISION.
PROGRAM-ID. TABLE-FILE-DEMO.

ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
    SELECT PRODUCTS ASSIGN TO 'products.dat'
        ORGANIZATION IS LINE SEQUENTIAL.
    SELECT SALES ASSIGN TO 'sales.dat'
        ORGANIZATION IS LINE SEQUENTIAL.
    SELECT REPFILE ASSIGN TO 'report.out'
        ORGANIZATION IS LINE SEQUENTIAL.

DATA DIVISION.
FILE SECTION.
FD PRODUCTS.
01 PRODUCTS-REC PIC X(120).

FD SALES.
01 SALES-REC PIC X(120).

FD REPFILE.
01 REP-REC PIC X(200).

WORKING-STORAGE SECTION.
01 EOF-PROD PIC X VALUE 'N'.
01 EOF-SALES PIC X VALUE 'N'.

*> CSV parsing
01 CURR-CODE PIC X(10).
01 CURR-NAME PIC X(30).
01 PRICE-TXT PIC X(15).
01 QTY-TXT PIC X(15).
01 PRICE PIC 9(7)V99 VALUE 0.
01 QTY PIC 9(7) VALUE 0.
01 LINE-TOTAL PIC 9(11)V99 VALUE 0.
01 GRAND-TOTAL PIC 9(13)V99 VALUE 0.

01 I PIC 9(4) VALUE 0.
01 FOUND-INDEX PIC 9(4) VALUE 0.
01 P-FOUND PIC X VALUE 'N'.

*> Product table
01 PRODUCT-TABLE.
    05 PCOUNT PIC 9(4) VALUE 0.
    05 PITEM OCCURS 100 TIMES.
       10 P-CODE PIC X(10).
       10 P-NAME PIC X(30).
       10 P-PRICE PIC 9(7)V99.

PROCEDURE DIVISION.
MAIN.
    OPEN INPUT PRODUCTS SALES
         OUTPUT REPFILE

    PERFORM LOAD-PRODUCTS
    PERFORM WRITE-HEADER
    PERFORM PROCESS-SALES
    PERFORM WRITE-FOOTER

    CLOSE PRODUCTS SALES REPFILE
    GOBACK.

LOAD-PRODUCTS.
    PERFORM UNTIL EOF-PROD = 'Y'
        READ PRODUCTS
            AT END MOVE 'Y' TO EOF-PROD
            NOT AT END
                PERFORM PARSE-PRODUCT
                IF CURR-CODE NOT = SPACES
                    ADD 1 TO PCOUNT
                    MOVE CURR-CODE TO P-CODE(PCOUNT)
                    MOVE CURR-NAME TO P-NAME(PCOUNT)
                    MOVE PRICE TO P-PRICE(PCOUNT)
                END-IF
        END-READ
    END-PERFORM.

PARSE-PRODUCT.
    MOVE SPACES TO CURR-CODE CURR-NAME PRICE-TXT
    MOVE 0 TO PRICE
    UNSTRING PRODUCTS-REC DELIMITED BY ","
        INTO CURR-CODE
             CURR-NAME
             PRICE-TXT
    END-UNSTRING
    IF PRICE-TXT NOT = SPACES
        MOVE FUNCTION NUMVAL(PRICE-TXT) TO PRICE
    END-IF.

PROCESS-SALES.
    PERFORM UNTIL EOF-SALES = 'Y'
        READ SALES
            AT END MOVE 'Y' TO EOF-SALES
            NOT AT END
                PERFORM PARSE-SALE
                IF CURR-CODE NOT = SPACES AND QTY > 0
                    PERFORM FIND-PRODUCT
                    IF P-FOUND = 'Y'
                        COMPUTE LINE-TOTAL = QTY * PRICE
                        ADD LINE-TOTAL TO GRAND-TOTAL
                        PERFORM WRITE-DETAIL
                    ELSE
                        MOVE SPACES TO REP-REC
                        STRING "MISSING PRODUCT: " CURR-CODE
                               DELIMITED BY SIZE
                               INTO REP-REC
                        END-STRING
                        WRITE REP-REC
                    END-IF
                END-IF
        END-READ
    END-PERFORM.

PARSE-SALE.
    MOVE SPACES TO CURR-CODE QTY-TXT
    MOVE 0 TO QTY
    UNSTRING SALES-REC DELIMITED BY ","
        INTO CURR-CODE
             QTY-TXT
    END-UNSTRING
    IF QTY-TXT NOT = SPACES
        MOVE FUNCTION NUMVAL(QTY-TXT) TO QTY
    END-IF.

FIND-PRODUCT.
    MOVE 'N' TO P-FOUND
    MOVE 0 TO FOUND-INDEX
    PERFORM VARYING I FROM 1 BY 1 UNTIL I > PCOUNT OR P-FOUND = 'Y'
        IF P-CODE(I) = CURR-CODE
            MOVE P-PRICE(I) TO PRICE
            MOVE I TO FOUND-INDEX
            MOVE 'Y' TO P-FOUND
        END-IF
    END-PERFORM.

WRITE-HEADER.
    MOVE "CODE  NAME  QTY  PRICE  TOTAL" TO REP-REC
    WRITE REP-REC.

WRITE-DETAIL.
    MOVE SPACES TO REP-REC
    STRING CURR-CODE DELIMITED BY SIZE
           SPACE SPACE
           P-NAME(FOUND-INDEX) DELIMITED BY SIZE
           SPACE SPACE
           QTY DELIMITED BY SIZE
           SPACE SPACE
           PRICE DELIMITED BY SIZE
           SPACE SPACE
           LINE-TOTAL DELIMITED BY SIZE
           INTO REP-REC
    END-STRING
    WRITE REP-REC.

WRITE-FOOTER.
    MOVE SPACES TO REP-REC
    STRING "GRAND TOTAL: " DELIMITED BY SIZE
           GRAND-TOTAL DELIMITED BY SIZE
           INTO REP-REC
    END-STRING
    WRITE REP-REC.
    